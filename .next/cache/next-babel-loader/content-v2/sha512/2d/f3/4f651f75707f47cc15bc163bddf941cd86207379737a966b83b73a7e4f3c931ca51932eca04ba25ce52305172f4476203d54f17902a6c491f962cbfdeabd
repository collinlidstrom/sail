{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { tomorrow } from \"react-syntax-highlighter/dist/cjs/styles/prism\";\nimport geoJSONRestaurants from \"../../../data/restaurants-geojson.json\";\nimport geoJSONRooms from \"../../../data/rooms-geojson.json\";\nimport Map from \"../../Map\";\n\nconst Maps = () => {\n  return __jsx(\"div\", {\n    id: \"maps\",\n    className: \"docs-item element\"\n  }, __jsx(\"h5\", {\n    className: \"text-uppercase mb-4\"\n  }, \"Maps\"), __jsx(\"div\", {\n    className: \"docs-desc\"\n  }, __jsx(\"p\", {\n    className: \"lead\"\n  }, \"Maps inside this theme use React Leaflet and tiles from\", \" \", __jsx(\"a\", {\n    href: \"https://carto.com/\"\n  }, \"Carto Maps\"), \".\"), __jsx(\"p\", null, \"A big advantage compared to Google Maps is that these maps are free to use. For the map tiles, you can also use maps from Mapbox or OpenStreet maps.\"), __jsx(\"p\", null, __jsx(\"a\", {\n    href: \"https://react-leaflet.js.org/\",\n    className: \"btn btn-outline-dark btn-sm\"\n  }, \"React Leaflet website\")), __jsx(\"p\", null, \"Since Next.js doesn't support JavaScript \", __jsx(\"code\", null, \"window\"), \" function, we have to load the \", __jsx(\"code\", null, \"Map\"), \" component dynamically using Next.js dynamic feature. Read more about dynamic importing\", \" \", __jsx(\"a\", {\n    href: \"https://nextjs.org/docs/advanced-features/dynamic-import\"\n  }, \"here\"), \".\"), __jsx(\"h6\", {\n    className: \"text-dark\"\n  }, \"Supported props for Map component:\"), __jsx(\"ul\", null, __jsx(\"li\", null, __jsx(\"b\", null, \"className\"), \" - classes for \", __jsx(\"code\", null, \"Map\"), \" element\"), __jsx(\"li\", null, __jsx(\"b\", null, \"center\"), \" - map center\"), __jsx(\"li\", null, __jsx(\"b\", null, \"zoom\"), \" - zoom level\"), __jsx(\"li\", null, __jsx(\"b\", null, \"geoJSON\"), \" - geoJSON data import\"), __jsx(\"li\", null, __jsx(\"b\", null, \"popupVenue\"), \" - if true, the map will use \", __jsx(\"code\", null, \"Venues\"), \" \", \"style (for markers and popups) instead of \", __jsx(\"code\", null, \"Rentals\")), __jsx(\"li\", null, __jsx(\"b\", null, \"hoverCard\"), \" - here you define which listing is hovered to show hover effect on according map marker (used at /category listing pages)\"))), __jsx(\"div\", {\n    className: \"mt-5\"\n  }, __jsx(\"h6\", null, \"Maps with multiple points\"), __jsx(\"p\", {\n    className: \"text-muted\"\n  }, \"Maps that are used in the category listings show multiple points/markers. Also, popup windows are automatically attached to these points. To display this type of map, you need to provide your list of points in a \", __jsx(\"a\", {\n    href: \"http://geojson.org/\"\n  }, \"GeoJSON file\"), \". These files will contain location data and accompanying data like title, description, image path, etc. See below the links to the particular GeoJSON files used in this theme.\"), __jsx(\"h6\", {\n    className: \"text-muted text-uppercase\"\n  }, \"Venues\"), __jsx(\"p\", {\n    className: \"text-muted text-sm mb-4\"\n  }, \"GeoJSON file used to generate markers:\", \" \", __jsx(\"a\", {\n    href: \"/content/restaurants-geojson.json\"\n  }, \"restaurants-geojson.json\")), __jsx(\"div\", {\n    className: \"map-wrapper-450 mb-2\"\n  }, __jsx(Map, {\n    className: \"h-100\",\n    center: [51.505, -0.09],\n    zoom: 14,\n    geoJSON: geoJSONRestaurants,\n    dragging: \"true\",\n    popupVenue: true\n  })), __jsx(\"div\", {\n    className: \"mt-4 mb-5\"\n  }, __jsx(SyntaxHighlighter, {\n    language: \"javascript\",\n    style: tomorrow,\n    className: \"rounded shadow p-4\"\n  }, highlightCode.venues)), __jsx(\"h6\", {\n    className: \"text-muted text-uppercase\"\n  }, \"Rentals\"), __jsx(\"p\", {\n    className: \"text-muted text-sm mb-4\"\n  }, \"GeoJSON file used to generate markers:\", \" \", __jsx(\"a\", {\n    href: \"/content/rooms-geojson.json\"\n  }, \"rooms-geojson.json\")), __jsx(\"div\", {\n    className: \"map-wrapper-450 mb-2\"\n  }, __jsx(Map, {\n    className: \"h-100\",\n    center: [51.505, -0.09],\n    zoom: 14,\n    geoJSON: geoJSONRooms,\n    dragging: \"true\"\n  })), __jsx(\"div\", {\n    className: \"mt-4 mb-5\"\n  }, __jsx(SyntaxHighlighter, {\n    language: \"javascript\",\n    style: tomorrow,\n    className: \"rounded shadow p-4\"\n  }, highlightCode.rentals)), __jsx(\"h6\", null, \"Maps with a single marker\"), __jsx(\"p\", {\n    className: \"text-muted\"\n  }, \"Maps used on the detail pages do not contain popups and do not use a GeoJSON file. You pass all the data to the JavaScript function.\"), __jsx(\"h6\", {\n    className: \"text-muted mb-4\"\n  }, \"Single-marker map\"), __jsx(\"div\", {\n    className: \"map-wrapper-300 mb-3\"\n  }, __jsx(Map, {\n    className: \"h-100\",\n    center: [40.732346, -74.0014247],\n    markerPosition: [40.732346, -74.0014247],\n    zoom: 16,\n    dragging: \"true\"\n  })), __jsx(\"div\", {\n    className: \"mt-4 mb-5\"\n  }, __jsx(SyntaxHighlighter, {\n    language: \"javascript\",\n    style: tomorrow,\n    className: \"rounded shadow p-4\"\n  }, highlightCode.single)), __jsx(\"h6\", {\n    className: \"text-muted mb-4\"\n  }, \"Single-marker map, circle instead of the marker\"), __jsx(\"div\", {\n    className: \"map-wrapper-300 mb-3\"\n  }, __jsx(Map, {\n    className: \"h-100\",\n    center: [40.732346, -74.0014247],\n    circlePosition: [40.732346, -74.0014247],\n    circleRadius: 500,\n    zoom: 14,\n    dragging: \"true\"\n  })), __jsx(\"div\", {\n    className: \"mt-4 mb-5\"\n  }, __jsx(SyntaxHighlighter, {\n    language: \"javascript\",\n    style: tomorrow,\n    className: \"rounded shadow p-4\"\n  }, highlightCode.circle))));\n};\n\nexport default Maps;\nconst highlightCode = {\n  venues: `\nimport geoJSON from './public/content/rooms-geojson.json'\nimport Map from '../components/Map'\n\nexport default () => {\n    return (\n        <div className=\"map-wrapper-300 mb-3\">\n            <Map\n                className=\"h-100\"\n                center={[51.505, -0.09]}\n                zoom={14}\n                popupVenue\n                geoJSON={geoJSON}\n            />\n        </div>\n    )\n}`,\n  rentals: `\nimport geoJSON from './public/content/rooms-geojson.json'\nimport Map from '../components/Map'\n\nexport default () => {\n    return (\n        <div className=\"map-wrapper-300 mb-3\">\n            <Map\n                className=\"h-100\"\n                center={[51.505, -0.09]}\n                zoom={14}\n                geoJSON={geoJSON}\n            />\n        </div>\n    )\n}`,\n  single: `\nimport geoJSON from './public/content/rooms-geojson.json'\nimport Map from '../components/Map'\n\nexport default () => {\n    return (\n        <div className=\"map-wrapper-300 mb-3\">\n            <Map\n                className=\"h-100\"\n                center={[40.732346, -74.0014247]}\n                zoom={14}\n                geoJSON={geoJSON}\n            />\n        </div>\n    )\n}`,\n  circle: `\nimport geoJSON from './public/content/rooms-geojson.json'\nimport Map from '../components/Map'\n\nexport default () => {\n    return (\n        <div className=\"map-wrapper-300 mb-3\">\n            <Map\n                className=\"h-100\"\n                center={[40.732346, -74.0014247]}\n                circlePosition={[40.732346, -74.0014247]}\n                circleRadius={500}\n                zoom={14}\n                geoJSON={geoJSON}\n            />\n        </div>\n    )\n}`\n};","map":null,"metadata":{},"sourceType":"module"}