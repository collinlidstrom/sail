{"ast":null,"code":"import _slicedToArray from \"/Users/collinlidstrom/IdeaProjects/sail/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Link from \"next/link\";\nimport { Map, Marker, Popup, TileLayer, Tooltip, Circle } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport Stars from \"./Stars\";\n\nvar MapLeaflet = function MapLeaflet(props) {\n  var tileLayers = [{\n    tiles: \"https://{s}.basemaps.cartocdn.com/rastertiles/voyager/{z}/{x}/{y}{r}.png\",\n    attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a>',\n    subdomains: \"abcd\"\n  }, {\n    tiles: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n  }, {\n    tiles: \"https://stamen-tiles-{s}.a.ssl.fastly.net/toner/{z}/{x}/{y}{r}.png\",\n    attribution: 'Map tiles by <a href=\"http://stamen.com\">Stamen Design</a>, <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a> &mdash; Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n  }, {\n    tiles: \"https://mapserver.mapy.cz/base-m/{z}-{x}-{y}\",\n    attribution: '&copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a>, <a href=\"https://seznam.cz\">Seznam.cz, a.s.</a>'\n  }, {\n    tiles: \"https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png\",\n    attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a>',\n    subdomains: \"abcd\"\n  }, {\n    tiles: \"https://maps.wikimedia.org/osm-intl/{z}/{x}/{y}{r}.png\",\n    attribution: '&copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, <a href=\"https://wikimediafoundation.org/wiki/Maps_Terms_of_Use\">Wikimedia maps</a>'\n  }];\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      hover = _React$useState2[0],\n      setHover = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      focus = _React$useState4[0],\n      setFocus = _React$useState4[1];\n\n  var icon = L.icon({\n    iconUrl: \"/content/svg/marker.svg\",\n    shadowUrl: \"\",\n    iconRetinaUrl: \"/content/svg/marker.svg\",\n    iconSize: [25, 37.5],\n    popupAnchor: [0, -18],\n    tooltipAnchor: [0, 19]\n  });\n  var highlightIcon = L.icon({\n    iconUrl: \"/content/svg/marker-hover.svg\",\n    shadowUrl: \"\",\n    iconRetinaUrl: \"/content/svg/marker-hover.svg\",\n    iconSize: [25, 37.5],\n    popupAnchor: [0, -18],\n    tooltipAnchor: [0, 19]\n  });\n  var markers = props.geoJSON && props.geoJSON.features && props.geoJSON.features.map(function (feature) {\n    return [feature.geometry.coordinates[1], feature.geometry.coordinates[0]];\n  });\n  return __jsx(Map, {\n    center: props.center && props.center,\n    zoom: props.zoom,\n    scrollWheelZoom: focus,\n    className: props.className,\n    dragging: props.dragging,\n    tap: props.tap,\n    bounds: props.geoJSON ? markers : null,\n    onFocus: function onFocus() {\n      return setFocus(true);\n    },\n    onBlur: function onBlur() {\n      return setFocus(false);\n    }\n  }, __jsx(TileLayer, {\n    url: tileLayers[0].tiles,\n    attribution: tileLayers[0].attribution\n  }), props.geoJSON && props.geoJSON.features && props.geoJSON.features.map(function (feature) {\n    var data = feature.properties;\n    return props.popupVenue ? __jsx(Marker, {\n      key: data.id,\n      position: [feature.geometry.coordinates[1], feature.geometry.coordinates[0]],\n      onMouseOver: function onMouseOver() {\n        setHover(data.id);\n      },\n      onMouseOut: function onMouseOut() {\n        setHover(false);\n      },\n      icon: hover === data.id || props.hoverCard === feature.properties.id ? highlightIcon : icon\n    }, __jsx(Popup, {\n      className: \"map-custom-popup\",\n      maxWidth: \"600\",\n      minWidth: \"200\"\n    }, __jsx(\"div\", {\n      className: \"popup-venue\"\n    }, data.image ? __jsx(\"div\", {\n      className: \"image d-none d-md-block\",\n      style: {\n        backgroundImage: \"url(/content/img/photo/\".concat(data.image, \")\")\n      }\n    }) : __jsx(\"div\", {\n      className: \"image\"\n    }), __jsx(\"div\", {\n      className: \"text\"\n    }, data.name && __jsx(\"h6\", null, __jsx(Link, {\n      href: data.link\n    }, __jsx(\"a\", null, data.name))), data.about && __jsx(\"p\", null, data.about), data.address && __jsx(\"p\", {\n      className: \"text-muted mb-1\"\n    }, data.address), data.email && __jsx(\"p\", {\n      className: \"text-muted mb-1\"\n    }, __jsx(\"i\", {\n      className: \"fas fa-envelope-open fa-fw text-dark mr-2\"\n    }), __jsx(\"a\", {\n      href: \"mailto:\".concat(data.email)\n    }, data.email)), data.phone && __jsx(\"p\", {\n      className: \"text-muted mb-1\"\n    }, __jsx(\"i\", {\n      className: \"fa fa-phone fa-fw text-dark mr-2\"\n    }), data.phone))))) : __jsx(Marker, {\n      key: data.id,\n      icon: icon,\n      opacity: 0,\n      position: [feature.geometry.coordinates[1], feature.geometry.coordinates[0]],\n      onMouseOver: function onMouseOver() {\n        setHover(data.id);\n      },\n      onMouseOut: function onMouseOut() {\n        setHover(false);\n      }\n    }, __jsx(Tooltip, {\n      permanent: true,\n      interactive: true,\n      direction: \"top\",\n      className: \"map-custom-tooltip \".concat(hover === data.id || props.hoverCard === feature.properties.id ? \"active\" : \"\")\n    }, \"$\", data.price), __jsx(Popup, {\n      className: \"map-custom-popup\",\n      maxWidth: \"600\",\n      minWidth: \"200\"\n    }, __jsx(\"div\", {\n      className: \"popup-rental\"\n    }, data.image ? __jsx(\"div\", {\n      className: \"image d-none d-md-block\",\n      style: {\n        backgroundImage: \"url(/content/img/photo/\".concat(data.image, \")\")\n      }\n    }) : __jsx(\"div\", {\n      className: \"image\"\n    }), __jsx(\"div\", {\n      className: \"text\"\n    }, data.name && __jsx(\"h6\", null, __jsx(Link, {\n      href: data.link\n    }, __jsx(\"a\", null, data.name))), __jsx(\"div\", {\n      className: \"text-xs\"\n    }, __jsx(Stars, {\n      stars: data.stars\n    }))))));\n  }), props.markerPosition && __jsx(Marker, {\n    position: props.markerPosition,\n    icon: icon\n  }), props.circlePosition && __jsx(Circle, {\n    center: props.circlePosition,\n    color: \"#4E66F8\",\n    fillColor: \"#8798fa\",\n    opacity: 0.5,\n    radius: props.circleRadius,\n    weight: 2\n  }));\n};\n\nexport default MapLeaflet;","map":null,"metadata":{},"sourceType":"module"}