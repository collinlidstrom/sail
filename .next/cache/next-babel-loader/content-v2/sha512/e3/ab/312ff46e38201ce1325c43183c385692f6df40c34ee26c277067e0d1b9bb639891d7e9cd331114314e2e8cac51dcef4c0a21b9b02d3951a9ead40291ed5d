{"ast":null,"code":"import _extends from \"/Users/collinlidstrom/IdeaProjects/sail/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"/Users/collinlidstrom/IdeaProjects/sail/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport dynamic from \"next/dynamic\";\nimport UseWindowSize from \"../hooks/UseWindowSize\";\nvar MapLeaflet;\n\nvar Map = function Map(props) {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      mapLoaded = _React$useState2[0],\n      setMapLoaded = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      dragging = _React$useState4[0],\n      setDragging = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      tap = _React$useState6[0],\n      setTap = _React$useState6[1];\n\n  var size = UseWindowSize();\n  React.useEffect(function () {\n    MapLeaflet = dynamic(function () {\n      return import(\"../components/MapLeaflet\");\n    }, {\n      ssr: false,\n      loadableGenerated: {\n        webpack: function webpack() {\n          return [require.resolveWeak(\"../components/MapLeaflet\")];\n        },\n        modules: [\"../components/Map.js -> \" + \"../components/MapLeaflet\"]\n      }\n    });\n    setMapLoaded(true);\n  }, []);\n  React.useEffect(function () {\n    if (mapLoaded) {\n      setTap(size.width > 700);\n      setDragging(size.width > 700);\n    }\n  }, [size, mapLoaded]);\n  return mapLoaded ? __jsx(MapLeaflet, _extends({\n    dragging: dragging,\n    tap: tap\n  }, props)) : __jsx(\"p\", null, \"loading\");\n};\n\nexport default Map;","map":null,"metadata":{},"sourceType":"module"}