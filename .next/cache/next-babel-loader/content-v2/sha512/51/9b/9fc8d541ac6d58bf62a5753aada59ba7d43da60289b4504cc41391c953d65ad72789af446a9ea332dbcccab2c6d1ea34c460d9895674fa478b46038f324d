{"ast":null,"code":"var _jsxFileName = \"/Users/collinlidstrom/IdeaProjects/sail/src/components/Header.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport Link from \"next/link\";\nimport Router from \"next/router\";\nimport { Collapse, Navbar, NavbarToggler, Nav, NavItem, NavLink, Dropdown, DropdownToggle, DropdownMenu, DropdownItem, Container, Row, Col, Form, Label, Input, Button, Badge } from \"reactstrap\";\nimport UseWindowSize from \"../hooks/UseWindowSize\";\nimport ActiveLink from \"./ActiveLink\";\nimport menu from \"../data/menu.json\";\nimport userMenu from \"../data/user-menu.json\";\nimport Image from \"./CustomImage\";\nimport Icon from \"./Icon\";\n\nconst Header = props => {\n  const [collapsed, setCollapsed] = React.useState(false);\n  const [dropdownOpen, setDropdownOpen] = React.useState({});\n  const [searchFocus, setSearchFocus] = React.useState(false);\n  const [dropdownAnimate, setDropdownAnimate] = React.useState(false);\n  const [parentName, setParentName] = React.useState(false);\n  const size = UseWindowSize();\n\n  const onFocus = () => setSearchFocus(!searchFocus);\n\n  const toggleDropdown = name => {\n    setDropdownOpen(_objectSpread(_objectSpread({}, dropdownOpen), {}, {\n      [name]: !dropdownOpen[name]\n    }));\n  };\n\n  const onLinkClick = parent => {\n    size.width < 991 && setCollapsed(!collapsed);\n    setParentName(parent);\n  }; // highlight not only active dropdown item, but also its parent, i.e. dropdown toggle\n\n\n  const highlightDropdownParent = () => {\n    menu.map(item => {\n      item.dropdown && item.dropdown.map(dropdownLink => {\n        dropdownLink.link && dropdownLink.link === Router.route && setParentName(item.title);\n        dropdownLink.links && dropdownLink.links.map(link => link.link === Router.route && setParentName(item.title));\n      });\n      item.megamenu && item.megamenu.map(megamenuColumn => megamenuColumn.map(megamenuBlock => megamenuBlock.links.map(dropdownLink => {\n        if (dropdownLink.link === Router.route) {\n          dropdownLink.parent ? setParentName(dropdownLink.parent) : setParentName(item.title);\n        }\n      })));\n      item.link === Router.route && setParentName(item.title);\n    });\n  };\n\n  React.useEffect(highlightDropdownParent, []);\n  return __jsx(\"header\", {\n    className: `header ${props.headerClasses ? props.headerClasses : \"\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, __jsx(Navbar, {\n    color: props.nav.color ? props.nav.color : \"white\",\n    light: props.nav.light && true,\n    dark: props.nav.dark && true,\n    fixed: props.nav.fixed ? props.nav.fixed : \"top\",\n    expand: \"lg\",\n    className: props.nav.classes ? props.nav.classes : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, __jsx(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"d-flex align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, __jsx(Link, {\n    href: \"/\",\n    passHref: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    className: \"py-1 navbar-brand\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  }, __jsx(\"img\", {\n    src: \"/content/svg/logo.svg\",\n    width: \"138\",\n    height: \"31\",\n    alt: \"Directory logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }))), __jsx(Form, {\n    id: \"search\",\n    className: \"form-inline d-none d-sm-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: `input-label-absolute input-label-absolute-left input-reset input-expand ml-lg-2 ml-xl-3 ${searchFocus ? \"focus\" : \"\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  }, __jsx(Label, {\n    for: \"search_search\",\n    className: \"label-absolute\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, __jsx(\"i\", {\n    className: \"fa fa-search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 19\n    }\n  }), __jsx(\"span\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 19\n    }\n  }, \"What are you looking for?\")), __jsx(Input, {\n    id: \"search_search\",\n    placeholder: \"Search\",\n    \"aria-label\": \"Search\",\n    bsSize: \"sm\",\n    className: \"border-0 shadow-0 bg-gray-200\",\n    onFocus: onFocus,\n    onBlur: () => setTimeout(() => onFocus(), 333),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }), __jsx(\"button\", {\n    type: \"reset\",\n    className: \"btn btn-sm btn-reset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }, __jsx(\"i\", {\n    className: \"fas fa-times\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 19\n    }\n  }))))), __jsx(NavbarToggler, {\n    onClick: () => setCollapsed(!collapsed),\n    className: \"navbar-toggler-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, __jsx(\"i\", {\n    className: \"fa fa-bars\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  })), __jsx(Collapse, {\n    isOpen: collapsed,\n    navbar: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, __jsx(Form, {\n    id: \"searchcollapsed\",\n    className: \"form-inline mt-4 mb-2 d-sm-none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: `input-label-absolute input-label-absolute-left input-reset w-100 ${searchFocus ? \"focus\" : \"\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 15\n    }\n  }, __jsx(Label, {\n    for: \"searchcollapsed_search\",\n    className: \"label-absolute\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  }, __jsx(\"i\", {\n    className: \"fa fa-search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 19\n    }\n  }), __jsx(\"span\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 19\n    }\n  }, \"What are you looking for?\")), __jsx(Input, {\n    id: \"searchcollapsed_search\",\n    placeholder: \"Search\",\n    \"aria-label\": \"Search\",\n    bsSize: \"sm\",\n    className: \"border-0 shadow-0 bg-gray-200\",\n    onFocus: onFocus,\n    onBlur: () => setTimeout(() => onFocus(), 333),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 17\n    }\n  }), __jsx(Button, {\n    type: \"reset\",\n    size: \"sm\",\n    color: \"deoco\",\n    className: \"btn-reset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  }, __jsx(\"i\", {\n    className: \"fas fa-times\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 19\n    }\n  })))), __jsx(Nav, {\n    navbar: true,\n    className: \"ml-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }, menu && menu.map(item => item.dropdown || item.megamenu ? // show entire menu to unlogged user or hide items that have hideToLoggedUser set to true\n  !props.loggedUser || props.loggedUser && !item.hideToLoggedUser ? __jsx(Dropdown, {\n    nav: true,\n    inNavbar: true,\n    key: item.title,\n    className: item.position ? `position-${item.position}` : ``,\n    isOpen: dropdownOpen[item.title],\n    toggle: () => toggleDropdown(item.title),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 23\n    }\n  }, __jsx(DropdownToggle, {\n    nav: true,\n    caret: true,\n    onClick: () => setDropdownAnimate(_objectSpread(_objectSpread({}, dropdownAnimate), {}, {\n      [item.title]: !dropdownOpen[item.title]\n    })),\n    className: parentName === item.title ? \"active\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 25\n    }\n  }, item.title), __jsx(DropdownMenu, {\n    className: `${dropdownAnimate[item.title] === false ? \"hide\" : \"\"} ${item.megamenu ? \"megamenu py-lg-0\" : \"\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 25\n    }\n  }, item.dropdown && item.dropdown.map(dropdownItem => dropdownItem.links ? __jsx(React.Fragment, {\n    key: dropdownItem.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 33\n    }\n  }, __jsx(\"h6\", {\n    className: \"dropdown-header font-weight-normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 35\n    }\n  }, dropdownItem.title), dropdownItem.links.map(link => __jsx(ActiveLink, {\n    key: link.title,\n    activeClassName: \"active\",\n    href: link.link,\n    passHref: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 37\n    }\n  }, __jsx(DropdownItem, {\n    onClick: () => onLinkClick(item.title),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 39\n    }\n  }, link.title, link.new && __jsx(Badge, {\n    color: \"info-light\",\n    className: \"ml-1 mt-n1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 43\n    }\n  }, \"New\"))))) : __jsx(ActiveLink, {\n    key: dropdownItem.title,\n    activeClassName: \"active\",\n    href: dropdownItem.link,\n    passHref: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 33\n    }\n  }, __jsx(DropdownItem, {\n    onClick: () => onLinkClick(item.title),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 35\n    }\n  }, dropdownItem.title, dropdownItem.new && __jsx(Badge, {\n    color: \"info-light\",\n    className: \"ml-1 mt-n1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 39\n    }\n  }, \"New\")))), item.megamenu && __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 29\n    }\n  }, __jsx(Col, {\n    lg: \"9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 31\n    }\n  }, __jsx(Row, {\n    className: \"p-3 pr-lg-0 pl-lg-5 pt-lg-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 33\n    }\n  }, item.megamenu.map((megamenuItem, index) => __jsx(Col, {\n    key: index,\n    lg: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 37\n    }\n  }, megamenuItem.map((block, index) => __jsx(React.Fragment, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 41\n    }\n  }, __jsx(\"h6\", {\n    className: \"text-uppercase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 43\n    }\n  }, block.title), __jsx(\"ul\", {\n    className: \"megamenu-list list-unstyled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 43\n    }\n  }, block.links.map(link => __jsx(\"li\", {\n    key: link.title,\n    className: \"megamenu-list-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 47\n    }\n  }, __jsx(ActiveLink, {\n    activeClassName: \"active\",\n    href: link.link,\n    as: link.as,\n    passHref: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 49\n    }\n  }, __jsx(DropdownItem, {\n    className: \"megamenu-list-link\",\n    onClick: () => link.parent ? onLinkClick(link.parent) : onLinkClick(item.title),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 51\n    }\n  }, link.title, link.new && __jsx(Badge, {\n    color: \"info-light\",\n    className: \"ml-1 mt-n1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 55\n    }\n  }, \"New\"))))))))))), item.services && __jsx(Row, {\n    className: \"megamenu-services d-none d-lg-flex pl-lg-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 35\n    }\n  }, item.services.map(service => __jsx(Col, {\n    key: service.title,\n    xl: \"3\",\n    lg: \"6\",\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 39\n    }\n  }, __jsx(\"div\", {\n    className: \"megamenu-services-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 41\n    }\n  }, __jsx(Icon, {\n    icon: service.icon,\n    className: \"megamenu-services-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 43\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 43\n    }\n  }, __jsx(\"h6\", {\n    className: \"text-uppercase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 45\n    }\n  }, service.title), __jsx(\"p\", {\n    className: \"mb-0 text-muted text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 45\n    }\n  }, service.content))))))), item.image && __jsx(Col, {\n    lg: \"3\",\n    className: \"d-none d-lg-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 33\n    }\n  }, __jsx(Image, {\n    src: item.image,\n    alt: \"\",\n    className: \"bg-image\",\n    loading: \"eager\",\n    layout: \"fill\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 35\n    }\n  }))))) : \"\" : props.loggedUser && !item.hideToLoggedUser || !props.loggedUser ? __jsx(NavItem, {\n    key: item.title,\n    className: item.button ? \"mt-3 mt-lg-0 ml-lg-3 d-lg-none d-xl-inline-block\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 21\n    }\n  }, item.button ? item.showToLoggedUser !== false && __jsx(ActiveLink, {\n    activeClassName: \"active\",\n    href: item.link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 27\n    }\n  }, __jsx(\"a\", {\n    className: \"btn btn-primary\",\n    onClick: () => onLinkClick(item.title),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 29\n    }\n  }, item.title)) : __jsx(ActiveLink, {\n    activeClassName: \"active\",\n    href: item.link,\n    passHref: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 25\n    }\n  }, __jsx(NavLink, {\n    onClick: () => onLinkClick(item.title),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 27\n    }\n  }, item.title))) : \"\"), props.loggedUser && userMenu && userMenu.map(item => __jsx(Dropdown, {\n    nav: true,\n    inNavbar: true,\n    key: item.title,\n    className: item.type === \"avatar\" ? \"ml-lg-3\" : \"\",\n    isOpen: dropdownOpen[item.title],\n    toggle: () => toggleDropdown(item.title),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 19\n    }\n  }, __jsx(DropdownToggle, {\n    nav: true,\n    style: item.type === \"avatar\" && {\n      padding: 0\n    },\n    onClick: () => setDropdownAnimate(_objectSpread(_objectSpread({}, dropdownAnimate), {}, {\n      [item.title]: !dropdownOpen[item.img]\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 21\n    }\n  }, item.type === \"avatar\" ? __jsx(\"div\", {\n    className: \"mr-2 avatar-border-white avatar avatar-sm overflow-hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 25\n    }\n  }, __jsx(Image, {\n    src: `/content${item.img}`,\n    width: 36,\n    height: 36,\n    layout: \"fixed\",\n    alt: item.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 27\n    }\n  })) : item.title), __jsx(DropdownMenu, {\n    className: dropdownAnimate[item.title] === false ? \"hide\" : \"\",\n    right: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 21\n    }\n  }, item.dropdown && item.dropdown.map(dropdownItem => __jsx(ActiveLink, {\n    key: dropdownItem.title,\n    activeClassName: \"active\",\n    href: dropdownItem.link,\n    passHref: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 27\n    }\n  }, __jsx(DropdownItem, {\n    onClick: () => onLinkClick(item.title),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 29\n    }\n  }, dropdownItem.title)))))))))));\n};\n\nexport default Header;","map":{"version":3,"sources":["/Users/collinlidstrom/IdeaProjects/sail/src/components/Header.js"],"names":["React","Link","Router","Collapse","Navbar","NavbarToggler","Nav","NavItem","NavLink","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","Container","Row","Col","Form","Label","Input","Button","Badge","UseWindowSize","ActiveLink","menu","userMenu","Image","Icon","Header","props","collapsed","setCollapsed","useState","dropdownOpen","setDropdownOpen","searchFocus","setSearchFocus","dropdownAnimate","setDropdownAnimate","parentName","setParentName","size","onFocus","toggleDropdown","name","onLinkClick","parent","width","highlightDropdownParent","map","item","dropdown","dropdownLink","link","route","title","links","megamenu","megamenuColumn","megamenuBlock","useEffect","headerClasses","nav","color","light","dark","fixed","classes","setTimeout","loggedUser","hideToLoggedUser","position","dropdownItem","new","megamenuItem","index","block","as","services","service","icon","content","image","button","showToLoggedUser","type","padding","img"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport Link from \"next/link\"\nimport Router from \"next/router\"\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  Nav,\n  NavItem,\n  NavLink,\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Container,\n  Row,\n  Col,\n  Form,\n  Label,\n  Input,\n  Button,\n  Badge,\n} from \"reactstrap\"\n\nimport UseWindowSize from \"../hooks/UseWindowSize\"\n\nimport ActiveLink from \"./ActiveLink\"\n\nimport menu from \"../data/menu.json\"\n\nimport userMenu from \"../data/user-menu.json\"\nimport Image from \"./CustomImage\"\nimport Icon from \"./Icon\"\n\nconst Header = (props) => {\n  const [collapsed, setCollapsed] = React.useState(false)\n  const [dropdownOpen, setDropdownOpen] = React.useState({})\n  const [searchFocus, setSearchFocus] = React.useState(false)\n  const [dropdownAnimate, setDropdownAnimate] = React.useState(false)\n  const [parentName, setParentName] = React.useState(false)\n\n  const size = UseWindowSize()\n\n  const onFocus = () => setSearchFocus(!searchFocus)\n\n  const toggleDropdown = (name) => {\n    setDropdownOpen({ ...dropdownOpen, [name]: !dropdownOpen[name] })\n  }\n\n  const onLinkClick = (parent) => {\n    size.width < 991 && setCollapsed(!collapsed)\n    setParentName(parent)\n  }\n\n  // highlight not only active dropdown item, but also its parent, i.e. dropdown toggle\n  const highlightDropdownParent = () => {\n    menu.map((item) => {\n      item.dropdown &&\n        item.dropdown.map((dropdownLink) => {\n          dropdownLink.link &&\n            dropdownLink.link === Router.route &&\n            setParentName(item.title)\n          dropdownLink.links &&\n            dropdownLink.links.map(\n              (link) => link.link === Router.route && setParentName(item.title)\n            )\n        })\n      item.megamenu &&\n        item.megamenu.map((megamenuColumn) =>\n          megamenuColumn.map((megamenuBlock) =>\n            megamenuBlock.links.map((dropdownLink) => {\n              if (dropdownLink.link === Router.route) {\n                dropdownLink.parent\n                  ? setParentName(dropdownLink.parent)\n                  : setParentName(item.title)\n              }\n            })\n          )\n        )\n      item.link === Router.route && setParentName(item.title)\n    })\n  }\n\n  React.useEffect(highlightDropdownParent, [])\n  return (\n    <header\n      className={`header ${props.headerClasses ? props.headerClasses : \"\"}`}\n    >\n      <Navbar\n        color={props.nav.color ? props.nav.color : \"white\"}\n        light={props.nav.light && true}\n        dark={props.nav.dark && true}\n        fixed={props.nav.fixed ? props.nav.fixed : \"top\"}\n        expand=\"lg\"\n        className={props.nav.classes ? props.nav.classes : \"\"}\n      >\n        <Container fluid={true}>\n          <div className=\"d-flex align-items-center\">\n            <Link href=\"/\" passHref>\n              <a className=\"py-1 navbar-brand\">\n                <img\n                  src=\"/content/svg/logo.svg\"\n                  width=\"138\"\n                  height=\"31\"\n                  alt=\"Directory logo\"\n                />\n              </a>\n            </Link>\n\n            {/* search form */}\n            <Form id=\"search\" className=\"form-inline d-none d-sm-flex\">\n              <div\n                className={`input-label-absolute input-label-absolute-left input-reset input-expand ml-lg-2 ml-xl-3 ${\n                  searchFocus ? \"focus\" : \"\"\n                }`}\n              >\n                <Label for=\"search_search\" className=\"label-absolute\">\n                  <i className=\"fa fa-search\"></i>\n                  <span className=\"sr-only\">What are you looking for?</span>\n                </Label>\n                <Input\n                  id=\"search_search\"\n                  placeholder=\"Search\"\n                  aria-label=\"Search\"\n                  bsSize=\"sm\"\n                  className=\"border-0 shadow-0 bg-gray-200\"\n                  onFocus={onFocus}\n                  onBlur={() => setTimeout(() => onFocus(), 333)}\n                />\n                <button type=\"reset\" className=\"btn btn-sm btn-reset\">\n                  <i className=\"fas fa-times\"></i>\n                </button>\n              </div>\n            </Form>\n          </div>\n          <NavbarToggler\n            onClick={() => setCollapsed(!collapsed)}\n            className=\"navbar-toggler-right\"\n          >\n            <i className=\"fa fa-bars\"></i>\n          </NavbarToggler>\n          <Collapse isOpen={collapsed} navbar>\n            {/* mobile search form */}\n            <Form\n              id=\"searchcollapsed\"\n              className=\"form-inline mt-4 mb-2 d-sm-none\"\n            >\n              <div\n                className={`input-label-absolute input-label-absolute-left input-reset w-100 ${\n                  searchFocus ? \"focus\" : \"\"\n                }`}\n              >\n                <Label for=\"searchcollapsed_search\" className=\"label-absolute\">\n                  <i className=\"fa fa-search\"></i>\n\n                  <span className=\"sr-only\">What are you looking for?</span>\n                </Label>\n                <Input\n                  id=\"searchcollapsed_search\"\n                  placeholder=\"Search\"\n                  aria-label=\"Search\"\n                  bsSize=\"sm\"\n                  className=\"border-0 shadow-0 bg-gray-200\"\n                  onFocus={onFocus}\n                  onBlur={() => setTimeout(() => onFocus(), 333)}\n                />\n                <Button\n                  type=\"reset\"\n                  size=\"sm\"\n                  color=\"deoco\"\n                  className=\"btn-reset\"\n                >\n                  <i className=\"fas fa-times\"></i>\n                </Button>\n              </div>\n            </Form>\n            <Nav navbar className=\"ml-auto\">\n              {menu &&\n                menu.map((item) =>\n                  item.dropdown || item.megamenu ? (\n                    // show entire menu to unlogged user or hide items that have hideToLoggedUser set to true\n                    !props.loggedUser ||\n                    (props.loggedUser && !item.hideToLoggedUser) ? (\n                      <Dropdown\n                        nav\n                        inNavbar\n                        key={item.title}\n                        className={\n                          item.position ? `position-${item.position}` : ``\n                        }\n                        isOpen={dropdownOpen[item.title]}\n                        toggle={() => toggleDropdown(item.title)}\n                      >\n                        <DropdownToggle\n                          nav\n                          caret\n                          onClick={() =>\n                            setDropdownAnimate({\n                              ...dropdownAnimate,\n                              [item.title]: !dropdownOpen[item.title],\n                            })\n                          }\n                          className={parentName === item.title ? \"active\" : \"\"}\n                        >\n                          {item.title}\n                        </DropdownToggle>\n                        <DropdownMenu\n                          className={`${\n                            dropdownAnimate[item.title] === false ? \"hide\" : \"\"\n                          } ${item.megamenu ? \"megamenu py-lg-0\" : \"\"}`}\n                        >\n                          {item.dropdown &&\n                            item.dropdown.map((dropdownItem) =>\n                              dropdownItem.links ? (\n                                <React.Fragment key={dropdownItem.title}>\n                                  <h6 className=\"dropdown-header font-weight-normal\">\n                                    {dropdownItem.title}\n                                  </h6>\n                                  {dropdownItem.links.map((link) => (\n                                    <ActiveLink\n                                      key={link.title}\n                                      activeClassName=\"active\"\n                                      href={link.link}\n                                      passHref\n                                    >\n                                      <DropdownItem\n                                        onClick={() => onLinkClick(item.title)}\n                                      >\n                                        {link.title}\n                                        {link.new && (\n                                          <Badge\n                                            color=\"info-light\"\n                                            className=\"ml-1 mt-n1\"\n                                          >\n                                            New\n                                          </Badge>\n                                        )}\n                                      </DropdownItem>\n                                    </ActiveLink>\n                                  ))}\n                                </React.Fragment>\n                              ) : (\n                                <ActiveLink\n                                  key={dropdownItem.title}\n                                  activeClassName=\"active\"\n                                  href={dropdownItem.link}\n                                  passHref\n                                >\n                                  <DropdownItem\n                                    onClick={() => onLinkClick(item.title)}\n                                  >\n                                    {dropdownItem.title}\n                                    {dropdownItem.new && (\n                                      <Badge\n                                        color=\"info-light\"\n                                        className=\"ml-1 mt-n1\"\n                                      >\n                                        New\n                                      </Badge>\n                                    )}\n                                  </DropdownItem>\n                                </ActiveLink>\n                              )\n                            )}\n                          {item.megamenu && (\n                            <Row>\n                              <Col lg=\"9\">\n                                <Row className=\"p-3 pr-lg-0 pl-lg-5 pt-lg-5\">\n                                  {item.megamenu.map((megamenuItem, index) => (\n                                    <Col key={index} lg=\"3\">\n                                      {megamenuItem.map((block, index) => (\n                                        <React.Fragment key={index}>\n                                          <h6 className=\"text-uppercase\">\n                                            {block.title}\n                                          </h6>\n                                          <ul className=\"megamenu-list list-unstyled\">\n                                            {block.links.map((link) => (\n                                              <li\n                                                key={link.title}\n                                                className=\"megamenu-list-item\"\n                                              >\n                                                <ActiveLink\n                                                  activeClassName=\"active\"\n                                                  href={link.link}\n                                                  as={link.as}\n                                                  passHref\n                                                >\n                                                  <DropdownItem\n                                                    className=\"megamenu-list-link\"\n                                                    onClick={() =>\n                                                      link.parent\n                                                        ? onLinkClick(\n                                                            link.parent\n                                                          )\n                                                        : onLinkClick(\n                                                            item.title\n                                                          )\n                                                    }\n                                                  >\n                                                    {link.title}\n                                                    {link.new && (\n                                                      <Badge\n                                                        color=\"info-light\"\n                                                        className=\"ml-1 mt-n1\"\n                                                      >\n                                                        New\n                                                      </Badge>\n                                                    )}\n                                                  </DropdownItem>\n                                                </ActiveLink>\n                                              </li>\n                                            ))}\n                                          </ul>\n                                        </React.Fragment>\n                                      ))}\n                                    </Col>\n                                  ))}\n                                </Row>\n                                {item.services && (\n                                  <Row className=\"megamenu-services d-none d-lg-flex pl-lg-5\">\n                                    {item.services.map((service) => (\n                                      <Col\n                                        key={service.title}\n                                        xl=\"3\"\n                                        lg=\"6\"\n                                        className=\"d-flex\"\n                                      >\n                                        <div className=\"megamenu-services-item\">\n                                          <Icon\n                                            icon={service.icon}\n                                            className=\"megamenu-services-icon\"\n                                          />\n                                          <div>\n                                            <h6 className=\"text-uppercase\">\n                                              {service.title}\n                                            </h6>\n                                            <p className=\"mb-0 text-muted text-sm\">\n                                              {service.content}\n                                            </p>\n                                          </div>\n                                        </div>\n                                      </Col>\n                                    ))}\n                                  </Row>\n                                )}\n                              </Col>\n                              {item.image && (\n                                <Col lg=\"3\" className=\"d-none d-lg-block\">\n                                  {/* Loading eager set for IE compatibility */}\n                                  <Image\n                                    src={item.image}\n                                    alt=\"\"\n                                    className=\"bg-image\"\n                                    loading=\"eager\"\n                                    layout=\"fill\"\n                                  />\n                                </Col>\n                              )}\n                            </Row>\n                          )}\n                        </DropdownMenu>\n                      </Dropdown>\n                    ) : (\n                      \"\"\n                    )\n                  ) : (props.loggedUser && !item.hideToLoggedUser) ||\n                    !props.loggedUser ? (\n                    <NavItem\n                      key={item.title}\n                      className={\n                        item.button\n                          ? \"mt-3 mt-lg-0 ml-lg-3 d-lg-none d-xl-inline-block\"\n                          : \"\"\n                      }\n                    >\n                      {item.button ? (\n                        item.showToLoggedUser !== false && (\n                          <ActiveLink activeClassName=\"active\" href={item.link}>\n                            <a\n                              className=\"btn btn-primary\"\n                              onClick={() => onLinkClick(item.title)}\n                            >\n                              {item.title}\n                            </a>\n                          </ActiveLink>\n                        )\n                      ) : (\n                        <ActiveLink\n                          activeClassName=\"active\"\n                          href={item.link}\n                          passHref\n                        >\n                          <NavLink onClick={() => onLinkClick(item.title)}>\n                            {item.title}\n                          </NavLink>\n                        </ActiveLink>\n                      )}\n                    </NavItem>\n                  ) : (\n                    \"\"\n                  )\n                )}\n              {props.loggedUser &&\n                userMenu &&\n                userMenu.map((item) => (\n                  <Dropdown\n                    nav\n                    inNavbar\n                    key={item.title}\n                    className={item.type === \"avatar\" ? \"ml-lg-3\" : \"\"}\n                    isOpen={dropdownOpen[item.title]}\n                    toggle={() => toggleDropdown(item.title)}\n                  >\n                    <DropdownToggle\n                      nav\n                      style={item.type === \"avatar\" && { padding: 0 }}\n                      onClick={() =>\n                        setDropdownAnimate({\n                          ...dropdownAnimate,\n                          [item.title]: !dropdownOpen[item.img],\n                        })\n                      }\n                    >\n                      {item.type === \"avatar\" ? (\n                        <div className=\"mr-2 avatar-border-white avatar avatar-sm overflow-hidden\">\n                          <Image\n                            src={`/content${item.img}`}\n                            width={36}\n                            height={36}\n                            layout=\"fixed\"\n                            alt={item.title}\n                          />\n                        </div>\n                      ) : (\n                        item.title\n                      )}\n                    </DropdownToggle>\n                    <DropdownMenu\n                      className={\n                        dropdownAnimate[item.title] === false ? \"hide\" : \"\"\n                      }\n                      right\n                    >\n                      {item.dropdown &&\n                        item.dropdown.map((dropdownItem) => (\n                          <ActiveLink\n                            key={dropdownItem.title}\n                            activeClassName=\"active\"\n                            href={dropdownItem.link}\n                            passHref\n                          >\n                            <DropdownItem\n                              onClick={() => onLinkClick(item.title)}\n                            >\n                              {dropdownItem.title}\n                            </DropdownItem>\n                          </ActiveLink>\n                        ))}\n                    </DropdownMenu>\n                  </Dropdown>\n                ))}\n            </Nav>\n          </Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  )\n}\n\nexport default Header\n"]},"metadata":{},"sourceType":"module"}