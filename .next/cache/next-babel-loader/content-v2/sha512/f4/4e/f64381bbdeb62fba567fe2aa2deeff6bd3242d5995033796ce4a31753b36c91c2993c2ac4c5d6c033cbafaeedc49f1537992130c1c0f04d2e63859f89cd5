{"ast":null,"code":"import _slicedToArray from \"/Users/collinlidstrom/IdeaProjects/sail/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Row, Col } from \"reactstrap\";\nimport Lightbox from \"react-image-lightbox\";\nimport \"react-image-lightbox/style.css\";\nimport Image from \"./CustomImage\";\n\nvar Gallery = function Gallery(props) {\n  var data = props.data;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      lightBoxOpen = _React$useState2[0],\n      setLightBoxOpen = _React$useState2[1];\n\n  var _React$useState3 = React.useState(0),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      activeImage = _React$useState4[0],\n      setActiveImage = _React$useState4[1];\n\n  var _onClick = function onClick(index) {\n    setActiveImage(index);\n    setLightBoxOpen(!lightBoxOpen);\n  };\n\n  var customStyles = {\n    overlay: {\n      zIndex: \"1000\"\n    },\n    bodyOpen: {\n      position: \"fixed\"\n    }\n  };\n  return __jsx(React.Fragment, null, __jsx(Row, {\n    className: props.rowClasses\n  }, data.map(function (item, index) {\n    return __jsx(Col, {\n      key: index,\n      xs: props.xs,\n      sm: props.sm,\n      md: props.md,\n      lg: props.lg,\n      xl: props.xl,\n      className: props.colClasses\n    }, __jsx(Image, {\n      key: index,\n      src: \"/content/img/photo/\".concat(item.img),\n      width: 1350,\n      height: 900,\n      alt: item.alt,\n      layout: \"responsive\",\n      className: \"img-fluid img-gallery\",\n      sizes: \"(max-width:991px) 50vw, 240px\",\n      onClick: function onClick() {\n        return _onClick(index);\n      }\n    }));\n  })), lightBoxOpen && __jsx(Lightbox, {\n    mainSrc: \"/content/img/photo/\".concat(data[activeImage].img),\n    nextSrc: \"/content/img/photo/\".concat(data[(activeImage + 1) % data.length].img),\n    prevSrc: \"/content/img/photo/\".concat(data[(activeImage + data.length - 1) % data.length].img),\n    onCloseRequest: function onCloseRequest() {\n      return setLightBoxOpen(false);\n    },\n    imageCaption: data[activeImage].title,\n    onMovePrevRequest: function onMovePrevRequest() {\n      return setActiveImage((activeImage + data.length - 1) % data.length);\n    },\n    onMoveNextRequest: function onMoveNextRequest() {\n      return setActiveImage((activeImage + 1) % data.length);\n    },\n    enableZoom: false,\n    reactModalStyle: customStyles\n  }));\n};\n\nexport default Gallery;","map":null,"metadata":{},"sourceType":"module"}