{"ast":null,"code":"import _extends from \"/Users/collinlidstrom/IdeaProjects/sail/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"/Users/collinlidstrom/IdeaProjects/sail/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/collinlidstrom/IdeaProjects/sail/src/components/Map.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport dynamic from \"next/dynamic\";\nimport UseWindowSize from \"../hooks/UseWindowSize\";\nvar MapLeaflet;\n\nvar Map = function Map(props) {\n  _s();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      mapLoaded = _React$useState2[0],\n      setMapLoaded = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      dragging = _React$useState4[0],\n      setDragging = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      tap = _React$useState6[0],\n      setTap = _React$useState6[1];\n\n  var size = UseWindowSize();\n  React.useEffect(function () {\n    MapLeaflet = dynamic(function () {\n      return import(\"../components/MapLeaflet\");\n    }, {\n      ssr: false,\n      loadableGenerated: {\n        webpack: function webpack() {\n          return [require.resolveWeak(\"../components/MapLeaflet\")];\n        },\n        modules: [\"../components/Map.js -> \" + \"../components/MapLeaflet\"]\n      }\n    });\n    setMapLoaded(true);\n  }, []);\n  React.useEffect(function () {\n    if (mapLoaded) {\n      setTap(size.width > 700);\n      setDragging(size.width > 700);\n    }\n  }, [size, mapLoaded]);\n  return mapLoaded ? __jsx(MapLeaflet, _extends({\n    dragging: dragging,\n    tap: tap\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  })) : __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, \"loading\");\n};\n\n_s(Map, \"e1HmQnhog7bUUDJbqkgmiOhKcgo=\");\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/collinlidstrom/IdeaProjects/sail/src/components/Map.js"],"names":["React","dynamic","UseWindowSize","MapLeaflet","Map","props","useState","mapLoaded","setMapLoaded","dragging","setDragging","tap","setTap","size","useEffect","ssr","width"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AAEA,IAAIC,UAAJ;;AACA,IAAMC,GAAG,GAAG,SAANA,GAAM,CAACC,KAAD,EAAW;AAAA;;AAAA,wBACaL,KAAK,CAACM,QAAN,CAAe,KAAf,CADb;AAAA;AAAA,MACdC,SADc;AAAA,MACHC,YADG;;AAAA,yBAEWR,KAAK,CAACM,QAAN,CAAe,KAAf,CAFX;AAAA;AAAA,MAEdG,QAFc;AAAA,MAEJC,WAFI;;AAAA,yBAGCV,KAAK,CAACM,QAAN,CAAe,KAAf,CAHD;AAAA;AAAA,MAGdK,GAHc;AAAA,MAGTC,MAHS;;AAIrB,MAAMC,IAAI,GAAGX,aAAa,EAA1B;AAEAF,EAAAA,KAAK,CAACc,SAAN,CAAgB,YAAM;AACpBX,IAAAA,UAAU,GAAGF,OAAO,CAAC;AAAA,aAAM,OAAO,0BAAP,CAAN;AAAA,KAAD,EAA2C;AAC7Dc,MAAAA,GAAG,EAAE,KADwD;AAAA;AAAA;AAAA,sCAA7B,0BAA6B;AAAA;AAAA,+CAA7B,0BAA6B;AAAA;AAAA,KAA3C,CAApB;AAGAP,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GALD,EAKG,EALH;AAOAR,EAAAA,KAAK,CAACc,SAAN,CAAgB,YAAM;AACpB,QAAIP,SAAJ,EAAe;AACbK,MAAAA,MAAM,CAACC,IAAI,CAACG,KAAL,GAAa,GAAd,CAAN;AACAN,MAAAA,WAAW,CAACG,IAAI,CAACG,KAAL,GAAa,GAAd,CAAX;AACD;AACF,GALD,EAKG,CAACH,IAAD,EAAON,SAAP,CALH;AAMA,SAAOA,SAAS,GACd,MAAC,UAAD;AAAY,IAAA,QAAQ,EAAEE,QAAtB;AAAgC,IAAA,GAAG,EAAEE;AAArC,KAA8CN,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADc,GAGd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF;AAKD,CAxBD;;GAAMD,G;;KAAAA,G;AA0BN,eAAeA,GAAf","sourcesContent":["import React from \"react\"\nimport dynamic from \"next/dynamic\"\nimport UseWindowSize from \"../hooks/UseWindowSize\"\n\nlet MapLeaflet\nconst Map = (props) => {\n  const [mapLoaded, setMapLoaded] = React.useState(false)\n  const [dragging, setDragging] = React.useState(false)\n  const [tap, setTap] = React.useState(false)\n  const size = UseWindowSize()\n\n  React.useEffect(() => {\n    MapLeaflet = dynamic(() => import(\"../components/MapLeaflet\"), {\n      ssr: false,\n    })\n    setMapLoaded(true)\n  }, [])\n\n  React.useEffect(() => {\n    if (mapLoaded) {\n      setTap(size.width > 700)\n      setDragging(size.width > 700)\n    }\n  }, [size, mapLoaded])\n  return mapLoaded ? (\n    <MapLeaflet dragging={dragging} tap={tap} {...props} />\n  ) : (\n    <p>loading</p>\n  )\n}\n\nexport default Map\n"]},"metadata":{},"sourceType":"module"}