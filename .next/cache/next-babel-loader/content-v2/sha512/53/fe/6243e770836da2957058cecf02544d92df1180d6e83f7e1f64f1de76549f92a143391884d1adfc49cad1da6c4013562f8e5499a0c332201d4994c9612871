{"ast":null,"code":"var _jsxFileName = \"/Users/collinlidstrom/IdeaProjects/sail/src/components/Map.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\nimport dynamic from \"next/dynamic\";\nimport UseWindowSize from \"../hooks/UseWindowSize\";\nlet MapLeaflet;\n\nconst Map = props => {\n  const [mapLoaded, setMapLoaded] = React.useState(false);\n  const [dragging, setDragging] = React.useState(false);\n  const [tap, setTap] = React.useState(false);\n  const size = UseWindowSize();\n  React.useEffect(() => {\n    MapLeaflet = dynamic(() => import(\"../components/MapLeaflet\"), {\n      ssr: false,\n      loadableGenerated: {\n        webpack: () => [require.resolveWeak(\"../components/MapLeaflet\")],\n        modules: [\"../components/Map.js -> \" + \"../components/MapLeaflet\"]\n      }\n    });\n    setMapLoaded(true);\n  }, []);\n  React.useEffect(() => {\n    if (mapLoaded) {\n      setTap(size.width > 700);\n      setDragging(size.width > 700);\n    }\n  }, [size, mapLoaded]);\n  return mapLoaded ? __jsx(MapLeaflet, _extends({\n    dragging: dragging,\n    tap: tap\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  })) : __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, \"loading\");\n};\n\nexport default Map;","map":{"version":3,"sources":["/Users/collinlidstrom/IdeaProjects/sail/src/components/Map.js"],"names":["React","dynamic","UseWindowSize","MapLeaflet","Map","props","mapLoaded","setMapLoaded","useState","dragging","setDragging","tap","setTap","size","useEffect","ssr","width"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AAEA,IAAIC,UAAJ;;AACA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AACrB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,KAAK,CAACQ,QAAN,CAAe,KAAf,CAAlC;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,KAAK,CAACQ,QAAN,CAAe,KAAf,CAAhC;AACA,QAAM,CAACG,GAAD,EAAMC,MAAN,IAAgBZ,KAAK,CAACQ,QAAN,CAAe,KAAf,CAAtB;AACA,QAAMK,IAAI,GAAGX,aAAa,EAA1B;AAEAF,EAAAA,KAAK,CAACc,SAAN,CAAgB,MAAM;AACpBX,IAAAA,UAAU,GAAGF,OAAO,CAAC,MAAM,OAAO,0BAAP,CAAP,EAA2C;AAC7Dc,MAAAA,GAAG,EAAE,KADwD;AAAA;AAAA,4CAA7B,0BAA6B;AAAA,+CAA7B,0BAA6B;AAAA;AAAA,KAA3C,CAApB;AAGAR,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GALD,EAKG,EALH;AAOAP,EAAAA,KAAK,CAACc,SAAN,CAAgB,MAAM;AACpB,QAAIR,SAAJ,EAAe;AACbM,MAAAA,MAAM,CAACC,IAAI,CAACG,KAAL,GAAa,GAAd,CAAN;AACAN,MAAAA,WAAW,CAACG,IAAI,CAACG,KAAL,GAAa,GAAd,CAAX;AACD;AACF,GALD,EAKG,CAACH,IAAD,EAAOP,SAAP,CALH;AAMA,SAAOA,SAAS,GACd,MAAC,UAAD;AAAY,IAAA,QAAQ,EAAEG,QAAtB;AAAgC,IAAA,GAAG,EAAEE;AAArC,KAA8CN,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADc,GAGd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF;AAKD,CAxBD;;AA0BA,eAAeD,GAAf","sourcesContent":["import React from \"react\"\nimport dynamic from \"next/dynamic\"\nimport UseWindowSize from \"../hooks/UseWindowSize\"\n\nlet MapLeaflet\nconst Map = (props) => {\n  const [mapLoaded, setMapLoaded] = React.useState(false)\n  const [dragging, setDragging] = React.useState(false)\n  const [tap, setTap] = React.useState(false)\n  const size = UseWindowSize()\n\n  React.useEffect(() => {\n    MapLeaflet = dynamic(() => import(\"../components/MapLeaflet\"), {\n      ssr: false,\n    })\n    setMapLoaded(true)\n  }, [])\n\n  React.useEffect(() => {\n    if (mapLoaded) {\n      setTap(size.width > 700)\n      setDragging(size.width > 700)\n    }\n  }, [size, mapLoaded])\n  return mapLoaded ? (\n    <MapLeaflet dragging={dragging} tap={tap} {...props} />\n  ) : (\n    <p>loading</p>\n  )\n}\n\nexport default Map\n"]},"metadata":{},"sourceType":"module"}